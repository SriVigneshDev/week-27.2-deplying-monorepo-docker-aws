# üèóÔ∏è Build Stage
FROM node:22-alpine AS builder

# --- FIX: DECLARE THE BUILD ARGUMENT AND SET IT AS AN ENV VAR ---
# This makes the DATABASE_URL available to the `RUN` commands below
ARG DATABASE_URL
ENV DATABASE_URL=$DATABASE_URL
# -----------------------------------------------------------------

# Install dependencies needed for pnpm and potentially Prisma
RUN apk update && apk upgrade && apk add --no-cache libc6-compat openssl && rm -rf /var/cache/apk/*

WORKDIR /app

# Install pnpm globally
RUN npm i -g pnpm@latest

# Copy package files for better layer caching
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml turbo.json ./
# Important: Copy workspace package definitions to their respective folders
COPY packages/*/package.json ./packages/
COPY apps/web/package.json ./apps/web/

# Install dependencies with cache mount for speed
RUN --mount=type=cache,id=pnpm,target=/root/.local/share/pnpm/store \
    pnpm install --frozen-lockfile

# Copy all source code
COPY packages ./packages
COPY apps/web ./apps/web

# Generate Prisma client based on the schema
# This must be done before the build
RUN pnpm run generate:db

# Build the Next.js application using Turborepo
# DATABASE_URL is now available here, so SSG pages can be built
RUN --mount=type=cache,target=.turbo \
    pnpm --filter=web... run build

# üöÄ Production Stage - Alpine Minimal
FROM alpine:3.20

# Install only Node.js runtime and necessary libs for Prisma
RUN apk add --no-cache nodejs libc6-compat openssl

# Create a non-root user and group for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

WORKDIR /app

# Set user early to ensure correct ownership
USER nodejs

# Copy the standalone server output
COPY --from=builder --chown=nodejs:nodejs /app/apps/web/.next/standalone ./

# Copy static assets and public files to their correct locations within the server
COPY --from=builder --chown=nodejs:nodejs /app/apps/web/.next/static ./apps/web/.next/static
COPY --from=builder --chown=nodejs:nodejs /app/apps/web/public ./apps/web/public

# Prisma schema is required at runtime by the Prisma Client
COPY --from=builder --chown=nodejs:nodejs /app/packages/db/prisma/schema.prisma ./packages/db/prisma/schema.prisma

# --- FIX: PASS THE BUILD ARG TO THE FINAL STAGE FOR RUNTIME ---
ARG DATABASE_URL
ENV DATABASE_URL=$DATABASE_URL \
    NODE_ENV=production \
    PORT=3000 \
    # Set a reasonable memory limit for the Node.js process
    NODE_OPTIONS="--max-old-space-size=512"
# ---------------------------------------------------------------

EXPOSE 3000

# The command to start the standalone Next.js server
CMD ["node", "apps/web/server.js"]