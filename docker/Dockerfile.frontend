FROM node:22-alpine AS builder

ARG DATABASE_URL
ENV DATABASE_URL=$DATABASE_URL

WORKDIR /usr/src/app

RUN npm i -g pnpm 

COPY ./package.json ./pnpm-lock.yaml ./pnpm-workspace.yaml ./turbo.json ./

COPY  ./packages/*/package.json  ./packages/

COPY ./apps/web/package.json ./apps/web/package.json

RUN  pnpm i --frozen-lockfile

COPY  ./apps/web ./apps/web/

COPY  ./packages ./packages/

RUN pnpm run generate:db

RUN pnpm dlx turbo build --filter=web...

RUN pnpm prune --prod

FROM node:22-alpine AS production

WORKDIR /usr/src/app

RUN addgroup --system --gid 1001 nodejs && \
    adduser  --system --uid 1001 nextjs

RUN npm i -g pnpm

COPY --from=builder --chown=nextjs:nodejs  /usr/src/app/apps/web/.next ./apps/web/.next
COPY --from=builder --chown=nextjs:nodejs  /usr/src/app/apps/web/public ./apps/web/public
COPY --from=builder --chown=nextjs:nodejs  /usr/src/app/apps/web/package.json ./apps/web/package.json

COPY --from=builder --chown=nextjs:nodejs  /usr/src/app/package.json ./package.json
COPY --from=builder --chown=nextjs:nodejs  /usr/src/app/pnpm-lock.yaml ./pnpm-lock.yaml
COPY --from=builder --chown=nextjs:nodejs  /usr/src/app/pnpm-workspace.yaml ./pnpm-workspace.yaml

COPY --from=builder --chown=nextjs:nodejs /usr/src/app/node_modules ./node_modules
COPY --from=builder --chown=nextjs:nodejs /usr/src/app/packages ./packages

# Copy Prisma client and schema (needed for runtime)
COPY --from=builder --chown=nextjs:nodejs /usr/src/app/packages/db/prisma ./packages/db/prisma

ARG DATABASE_URL
ENV DATABASE_URL=$DATABASE_URL
ENV NODE_ENV=production

# Switch to non-root user
USER nextjs

# Expose port 3000 (Next.js default port)
EXPOSE 3000

# Start the production web app
CMD ["pnpm", "run", "start:web"]