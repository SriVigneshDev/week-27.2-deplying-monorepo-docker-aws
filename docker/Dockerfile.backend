# üèóÔ∏è Build Stage
FROM node:22-alpine AS builder

WORKDIR /app

RUN npm i -g pnpm

COPY package.json pnpm-lock.yaml pnpm-workspace.yaml turbo.json ./
COPY packages/*/package.json ./packages/
COPY apps/backend/package.json ./apps/backend/

RUN pnpm install --frozen-lockfile

COPY packages ./packages
COPY apps/backend ./apps/backend

RUN pnpm run generate:db
RUN pnpm dlx turbo build --filter=backend...

# Bundle into single file using npx (auto-installs esbuild)
RUN npx esbuild@latest apps/backend/dist/index.js \
    --bundle \
    --platform=node \
    --target=node22 \
    --outfile=apps/backend/standalone.js \
    --minify \
    --external:@prisma/client

# üöÄ Production Stage - Ultra Minimal
FROM gcr.io/distroless/nodejs22-debian12:nonroot

ENV NODE_ENV=production \
    PORT=8080

WORKDIR /app

# Copy bundled single file (all code + dependencies in one file!)
COPY --from=builder --chown=nonroot:nonroot /app/apps/backend/standalone.js ./

# Copy only Prisma (can't be bundled due to native binaries)
COPY --from=builder --chown=nonroot:nonroot /app/node_modules/.pnpm ./node_modules/.pnpm
COPY --from=builder --chown=nonroot:nonroot /app/node_modules/.modules.yaml ./node_modules/.modules.yaml
COPY --from=builder --chown=nonroot:nonroot /app/packages/db/prisma ./packages/db/prisma

EXPOSE 8080

CMD ["standalone.js"]